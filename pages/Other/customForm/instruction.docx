Исследование возможности отправки форм сверстанных в HTML через API тильды.

Чтобы появилось понимание как работают формы тильды изнутри на тестовой странице была создана шаблонная форма в блоке BF203N, с полями "e-mail", "имя", "телефон".
Тестовая страница с данной формой была опубликована и начат процесс разбора через панель разработчика в браузере.

Первое, что выяснилось - каждая форма созданная на тильде имеет уникальный ID (в нашем случае id="form711093579"), помимо этого в атрибуты формы добавляются параметры необходимые для работы данной формы, например: role, data-formactiontype, data-inputbox, data-success-callback. К тому же форма имеет ряд важных для работоспособности классов (напр. js-form-proccess, t-form_inputs-total_3). Все эти параметры отвечают за работоспособность самой формы через тильдовский API.

Далее были разобраны сами поля формы. Каждый input также содержит уникальный id и ряд атрибутов и классов, без которых работа формы невозможна. Например если попробовать удалить класс отвечающий за правила валидации полей - форма не будет отправлена, но появится сообщение об ошибке, в котором будет сказано что ни одно поле не заполнено (но они предварительно заполнены).

Исходя из выясненной информации была предпринята попытка скопировать HTML разметку всего содержимого тега <form></form>, чтобы вставить данную разметку в тильдовский блок t-123 HTML. При этом шаблонная форма была убрана со страницы и страница переопубликована. Эксперимент оказался более чем успешным. Таким образом форма стала иметь нужный нам формат HTML разметки, чтобы мы могли ее стилизовать нужным образом и вставить в любое место страницы в виде HTML, а также форма осталась полностью работоспособной и самой тильдой определяется таким же образом как стандартная шаблонная форма. 

Работоспособность сохранена на 100%, стилизация возможна любая кастомная, размещение возможно в любое место страницы. Цель достигнута.

Минусы данного способа:
    1. Есть примерно 5% вероятность, что разработчики тильды изменят что-то в своем коде и изменят классы за которые цепляют формы со страницы. Тогда они больше не "увидят" нашу форму и она потеряет работоспособность. Однако это крайне маловероятно, т.к. переопубликовывать им придется абсолютно все страницы всех пользователей тильды, чтобы внести изменения в верстку. Этого делать они не станут, а если изменят скрипт и не переопубликуют страницы всех пользователей - формы потеряют работоспособность повсеместно на сервисе тильды. На такой риск они вряд ли пойдут.
    2. При добавлении новой формы нужно каждый раз проводить процедуру генерации ID путем добавления формы в шаблонном блоке, публикации страницы и копирования разметки формы оттуда. Также необходимо стереть некоторые классы, которые отвечают за стилизацию и добавить кастомные классы.


Преимущества такого способа:
    1. На страницу не будет добавляться новый дополнительный скрипт, все будет работать на уже подключенных скриптах, что положительно скажется на быстродействии.
    2. Тильда воспринимает такую форму как "свою".
    3. Возможна любая стилизация.
    4. Такая реализация задействует от 0 до 1 блоков в редакторе (возможна вставка в HTML-элемент Zero блока, в отдельный HTML блок t-123 или в кастомно сверстанный блок).



Есть 2й вариант использования стандартных форм тильды, без копирования шаблонных форм.
Мы можем сверстать свою форму любого вида, добавить на страницу шаблонную форму, скрыть ее через CSS, чтобы на опубликованной странице была видна только кастомная форма и написать скрипт, который при нажатии кнопки "отправить" будет копировать данные из нашей формы в шаблонную, которую не видно и отправлять данные уже через нее.
Таким образом цель также достигается. Работоспособность сохранена, возможная любая кастомная стилизация, размещение возможно в любое место страницы.

Минусы данного способа:
    1. На странице будет добавлен очередной скрипт, что может негативно сказаться на быстродействии.
    2. Данная реализация задействует 2-3 блока в редакторе (увеличение конечного размера страницы)

Плюсы данного способа:
    1. Нет необходимости проходить процедуру генерации формы, стирать ненужные классы и добавлять нужные. Достаточно добавить "нашу" HTML-форму, шаблонную форму и скрипт который будет их обрабатывать.
    2. Возможна любая стилизация